import React, { useEffect, useState } from "react";
// import axios from "axios";
import { useParams, Link, useNavigate } from "react-router-dom";
import { ChevronLeft, Tag, Clock } from "lucide-react";

// D·ªØ li·ªáu m·∫´u (gi·ªëng trong FoodListPage)
const sampleFoods = [
  { _id: "1", name: "C∆°m h·∫£i s·∫£n", description: "C∆°m chi√™n c√πng t√¥m, m·ª±c v√† rau c·ªß t∆∞∆°i ngon.", ingredients: ["T√¥m", "M·ª±c", "Rau c·ªß", "C∆°m"], imgUrl: "https://danviet.ex-cdn.com/files/f1/2020/8/31/image4-1598431030-68-width605height416-1598810316509-15988103165132025318295.png", tags: ["H·∫£i s·∫£n", "C∆°m"] },
  { _id: "2", name: "L·∫©u Th√°i chua cay", description: "N∆∞·ªõc l·∫©u ƒë·∫≠m ƒë√† k·∫øt h·ª£p t√¥m, m·ª±c v√† rau t∆∞∆°i.", ingredients: ["T√¥m", "M·ª±c", "Rau t∆∞∆°i", "N∆∞·ªõc l·∫©u"], imgUrl: "https://i-giadinh.vnecdn.net/2022/12/17/Thanh-pham-1-1-5372-1671269525.jpg", tags: ["L·∫©u", "Chua cay"] },
  { _id: "3", name: "G·ªèi xo√†i t√¥m kh√¥", description: "G·ªèi xo√†i xanh k·∫øt h·ª£p t√¥m kh√¥, ƒë·∫≠u ph·ªông v√† rau th∆°m.", ingredients: ["Xo√†i", "T√¥m kh√¥", "ƒê·∫≠u ph·ªông", "Rau th∆°m"], imgUrl: "https://cdn.tgdd.vn/2020/06/CookProduct/1-1200x675-3.jpg", tags: ["G·ªèi", "Tr√°i c√¢y"] },
  { _id: "4", name: "Ph·ªü b√≤", description: "Ph·ªü b√≤ truy·ªÅn th·ªëng v·ªõi n∆∞·ªõc d√πng ƒë·∫≠m ƒë√† v√† th·ªãt b√≤ t∆∞∆°i ngon.", ingredients: ["B√∫n ph·ªü", "B√≤", "N∆∞·ªõc d√πng"], imgUrl: "https://cdn.tgdd.vn/2021/06/CookProduct/pho-bo-1200x676.jpg", tags: ["Ph·ªü", "B√≤"] },
  { _id: "5", name: "B√°nh m√¨ th·ªãt n∆∞·ªõng", description: "B√°nh m√¨ gi√≤n r·ª•m k·∫øt h·ª£p th·ªãt n∆∞·ªõng th∆°m ngon v√† rau s·ªëng.", ingredients: ["B√°nh m√¨", "Th·ªãt n∆∞·ªõng", "Rau s·ªëng"], imgUrl: "https://cdn.tgdd.vn/2021/06/CookProduct/banh-mi-thit-nuong-1200x676.jpg", tags: ["B√°nh m√¨", "Th·ªãt n∆∞·ªõng"] },
  { _id: "6", name: "B√∫n b√≤ Hu·∫ø", description: "B√∫n b√≤ Hu·∫ø v·ªõi n∆∞·ªõc d√πng cay n·ªìng v√† th·ªãt b√≤ m·ªÅm.", ingredients: ["B√∫n", "B√≤ Hu·∫ø", "N∆∞·ªõc d√πng"], imgUrl: "https://cdn.tgdd.vn/2021/06/CookProduct/bun-bo-hue-1200x676.jpg", tags: ["B√∫n", "Hu·∫ø"] },
  { _id: "7", name: "Ch·∫£ gi√≤", description: "Ch·∫£ gi√≤ gi√≤n r·ª•m v·ªõi nh√¢n th·ªãt v√† rau c·ªß.", ingredients: ["Rau c·ªß", "Th·ªãt", "B·ªôt g·∫°o"], imgUrl: "https://cdn.tgdd.vn/2021/06/CookProduct/cha-gio-1200x676.jpg", tags: ["Ch·∫£ gi√≤"] },
];

const FoodDetailPage = () => {
  const { id } = useParams();
  const [food, setFood] = useState(null);
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();
  
  useEffect(() => {
    // Khi backend ho√†n th√†nh, b·ªè comment v√† s·ª≠ d·ª•ng axios:
    // setLoading(true);
    // axios.get(`/api/foods/${id}`)
    //   .then(response => {
    //     setFood(response.data);
    //     setLoading(false);
    //   })
    //   .catch(err => {
    //     setError(err.message);
    //     setLoading(false);
    //   });

    // D√πng d·ªØ li·ªáu m·∫´u t·∫°m:
    const found = sampleFoods.find(item => item._id === id);
    setFood(found || null);
    setLoading(false);
  }, [id]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-red-500 mx-auto mb-4"></div>
          <p>ƒêang t·∫£i th√¥ng tin m√≥n ƒÉn...</p>
        </div>
      </div>
    );
  }

  if (!food) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <div className="text-center p-6 bg-white rounded-xl shadow-md max-w-md">
          <div className="text-red-500 text-5xl mb-4">üòï</div>
          <h2 className="text-2xl font-bold mb-2">Kh√¥ng t√¨m th·∫•y m√≥n ƒÉn</h2>
          <p className="text-gray-600 mb-6">M√≥n ƒÉn b·∫°n ƒëang t√¨m ki·∫øm kh√¥ng t·ªìn t·∫°i ho·∫∑c ƒë√£ b·ªã x√≥a.</p>
          <button
            onClick={() => navigate(-1)}
            className="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
          >
            Quay l·∫°i trang tr∆∞·ªõc
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gray-50 pb-16">
      {/* Back navigation */}
      <div className="bg-white sticky top-0 z-50 border-b">
        <div className="container mx-auto max-w-6xl px-4 py-3 flex items-center">
          <button 
            onClick={() => navigate(-1)} 
            className="flex items-center text-gray-700 hover:text-red-600 transition-colors"
          >
            <ChevronLeft className="h-5 w-5 mr-1" />
            <span>Quay l·∫°i</span>
          </button>
        </div>
      </div>
      
      {/* Hero section */}
      <div className="relative h-64 md:h-80 overflow-hidden">
        <img 
          src={food.imgUrl} 
          alt={food.name} 
          className="w-full h-full object-cover"
        />
        <div className="absolute inset-0 bg-gradient-to-t from-black/90 via-black/50 to-transparent"></div>
        <div className="absolute bottom-0 left-0 right-0 p-6 text-white z-10">
          <div className="container mx-auto max-w-6xl">
            <h1 className="text-4xl font-bold mb-3 drop-shadow-lg">{food.name}</h1>
            <div className="flex flex-wrap items-center gap-x-4 gap-y-2">
              {food.tags && food.tags.length > 0 && (
                <div className="flex items-center gap-2">
                  {food.tags.map((tag, index) => (
                    <span 
                      key={index} 
                      className="bg-black/30 px-3 py-1 rounded-full text-sm flex items-center"
                    >
                      <Tag className="h-3 w-3 mr-1" />
                      {tag}
                    </span>
                  ))}
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      
      {/* Food info */}
      <div className="container mx-auto max-w-6xl px-4 mt-8">
        <div className="bg-white rounded-xl shadow-md overflow-hidden mb-8">
          <div className="p-6">
            <h2 className="text-2xl font-bold text-gray-800 mb-4">Chi ti·∫øt m√≥n ƒÉn</h2>
            <p className="text-gray-700 mb-6 leading-relaxed">{food.description}</p>
            
            <h3 className="text-lg font-semibold mb-3 flex items-center text-gray-800">
              <Clock className="h-5 w-5 mr-2 text-red-500" />
              Nguy√™n li·ªáu
            </h3>
            <div className="bg-gray-50 p-4 rounded-lg mb-6">
              <div className="flex flex-wrap gap-2">
                {food.ingredients.map((ingredient, index) => (
                  <span key={index} className="bg-white px-3 py-1 rounded-full text-sm border border-gray-200">
                    {ingredient}
                  </span>
                ))}
              </div>
            </div>
            
            <div className="mt-8 flex justify-center">
              <button className="px-6 py-3 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors flex items-center">
                ƒê·∫∑t m√≥n n√†y
              </button>
            </div>
          </div>
        </div>
        
        {/* Related foods - could be added here */}
      </div>
    </div>
  );
};

export default FoodDetailPage;
